import telebot
from telebot import types

# Bot's API Token
bot = telebot.TeleBot('1707868667:AAHC17XDgOBdIUQwAGJr_Q-ha9NcOhJHWbM')
post = ''
author = ''
admin_id = ''
admin_checker = False
password = '421'


# -- Commands handler --
@bot.message_handler(commands=['start', 'admin'])
def get_command_messages(message):
	# Start
	if message.text == "/start":
		bot.send_message(message.chat.id, '''
–ü—Ä–∏–≤–µ—Ç! –•–æ—á–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç?''', reply_markup=keyboard_menu())
	if message.text == "/admin":
		global admin_checker
		bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å üîê")
		admin_checker = True


# -- Messages Handler --
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
	global post
	global author
	global admin_checker
	global admin_id
	# Some text
	if message.text == password and admin_checker:
		bot.send_message(message.chat.id, "–ù–æ–≤—ã–π id –∞–¥–º–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! üîì")
		admin_id = message.from_user.id
		admin_checker = False
		print("–ù–æ–≤—ã–π –∞–¥–º–∏–Ω:", message.from_user.id)
	elif message.text != password and admin_checker:
		bot.send_message(message.chat.id, "–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π! üîí")
		admin_checker = False
		print("–ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É, –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", message.from_user.username, message.from_user.id)
	else:
		bot.forward_message(message.chat.id, message.chat.id, message.message_id)
		bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å?", reply_markup=keyboard_create())
		post = message.text
		author = message.chat.username


# -- Content Handler --
@bot.message_handler(content_types=['photo', 'video', 'audio'])
def get_photo_messages(message):
	global admin_id
	try:
		bot.forward_message(admin_id, message.chat.id, message.message_id)
		bot.send_message(admin_id, str("*–§–∞–π–ª –ø—Ä–∏—Å–ª–∞–ª: *" + message.from_user.username), parse_mode="Markdown")
		bot.send_message(message.from_user.id, "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
	except:
		bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–µ–π—á–∞—Å –Ω–µ—Ç –∞–¥–º–∏–Ω–∞!')


# -- Callback --
@bot.callback_query_handler(func=lambda call: True)
def get_callback(call):
	global post
	global author
	if call.data == "new_post":
		bot.send_message(call.message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ—Å—Ç –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ‚è¨')
	if call.data == "info":
		bot.send_message(call.message.chat.id, '''
–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –±–æ—Ç—É —á—Ç–æ —É–≥–æ–¥–Ω–æ –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —ç—Ç–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –∞–¥–º–∏–Ω—É, —Ä–∞—Å—Ü–µ–Ω–∏–≤–∞—è —ç—Ç–æ –∫–∞–∫ –ø–æ—Å—Ç. \n
–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É, –∞—É–¥–∏–æ –∏–ª–∏ –≤–∏–¥–µ–æ —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –ø–æ—Å–ª–µ –ø–æ—Å—Ç–∞.\n
–ï—Å–ª–∏ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª - –Ω–∞–ø–∏—à–∏—Ç–µ –µ–µ –≤–º–µ—Å—Ç–µ —Å –ø–æ—Å—Ç–æ–º.\n

**–¢–µ–∫—Å—Ç** ‚Äì –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –¥–µ–ª–∞–µ—Ç —à—Ä–∏—Ñ—Ç –∂–∏—Ä–Ω—ã–º.\n
__–¢–µ–∫—Å—Ç__ ‚Äì –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –Ω–∞–∫–ª–æ–Ω—è–µ—Ç —à—Ä–∏—Ñ—Ç.''')
	if call.data == "send_post":
		try:
			get_new_post(post, author)
			bot.send_message(call.message.chat.id, '–í–∞—à –ø–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏! ‚úÖ')
		except:
			bot.send_message(call.message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Å–µ–π—á–∞—Å –Ω–µ—Ç –∞–¥–º–∏–Ω–∞!')
	if call.data == "send_img":
		bot.send_message(call.message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Ñ–∞–π–ª. üìÑ\n–ú–æ–∂–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ç–æ–ª—å–∫–æ 1 —Ñ–∞–π–ª')
	if call.data == "cancel_post":
		post = ''
		author = ''
		bot.send_message(call.message.chat.id, '–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!')


# -- Sending Post --
def get_new_post(text, user):
	global admin_id
	bot.send_message(admin_id, f"*–ù–æ–≤—ã–π –ø–æ—Å—Ç:*\n{text} \n*–ê–≤—Ç–æ—Ä:* {user}", parse_mode="Markdown")


# -- Keyboards --
def keyboard_menu():
	markup = types.InlineKeyboardMarkup()
	button_nav = types.InlineKeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç üìù", callback_data='new_post')
	button_check = types.InlineKeyboardButton("–ü–æ–¥—Ä–æ–±–Ω–µ–µ üîç", callback_data='info')
	markup.add(button_nav, button_check)
	return markup


def keyboard_create():
	markup = types.InlineKeyboardMarkup()
	button_done = types.InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úâ", callback_data='send_post')
	button_img = types.InlineKeyboardButton("–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª üìé", callback_data='send_img')
	button_cancel = types.InlineKeyboardButton("–û—Ç–º–µ–Ω–∞ üö´", callback_data='cancel_post')
	markup.add(button_done, button_img)
	markup.add(button_cancel)
	return markup


# -- Polling --
bot.polling(none_stop=False, interval=0, timeout=20)